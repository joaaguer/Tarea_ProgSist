CC = gcc
CFLAGS = -Wall -Wextra -std=c99

SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin

# Lista de archivos fuente
SRCS = $(wildcard $(SRC_DIR)/*.c)
OBJS = $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SRCS))

# Nombre del ejecutable
TARGET = $(BIN_DIR)/main

# Regla principal para construir el ejecutable
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $^ -o $@

# Regla para construir los archivos objeto
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

# Regla para crear los directorios necesarios
$(OBJ_DIR):
	mkdir -p $(OBJ_DIR)

$(BIN_DIR):
	mkdir -p $(BIN_DIR)

# Regla para limpiar los archivos generados
clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR)

# Dependencias
$(OBJS): | $(OBJ_DIR)
$(TARGET): | $(BIN_DIR)

# Regla predeterminada
all: $(TARGET)

# Regla para ejecutar el programa
run: $(TARGET)
	./$(TARGET)

# Regla para compilar y ejecutar el programa
build_and_run: all run

.PHONY: clean all run build_and_run